{
  "requirementText": "The `InterfaceGenerator` takes as input the `ApplicationFiles`, the `DomainModelFiles` and the `InfrastructureFiles` of the existing software and generates `InterfaceFiles` by using a LLM. It does this by assembling a system prompt that is made up from a preamble, the `ApplicationFiles` as is, the compressed `DomainModelFiles`, the compressed `InfrastructureFiles`, the format of how to specify files and general requirements the interface code must follow. The preamble and the general requirements are loaded statically from text files inside the Generator. One requirement is that the files in the LLM's response are located in 'src/interface' to match the constraint of the `InterfaceFiles` class. The file format is given by the `MessageParser` service, which is then used to parse the response of the LLM. To compress the `DomainModelFiles` and the `InfrastructureFiles` the `CodeCompressor` is used to only keep class declarations and constructor signatures. The generated interface shall be a CLI that makes the commands in the `ApplicationFiles` callable via command line."
}
