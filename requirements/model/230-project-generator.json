{
  "requirementText": "The `ProjectGenerator` takes as input the `InfrastructureFiles` and the `InterfaceFiles` of the existing software and generates a `FilesDictionary` that contains general project files by using a LLM. It does this by assembling a system prompt that is made up from a preamble, the general prompt, the format of how to specify files and general requirements the project files must follow. The user prompt consists of the `InfrastructureFiles` reduced to only import statements and the `InterfaceFiles` reduced to only the import statements. Import statements are detected by searching for the word \"import\" in the lines at the beginnings of the file contents.\nUse the `MessageParser` service.\nLoad resource files directly from the file system via the given relative path (so the execution folder implicitly is the base dir).\nUse the following existing resource files to load the static prompt texts:\nresources/prompts/general.txt : General statements usable in all generators\nresources/prompts/project_preamble.txt : Preamble for generating the project files\nresources/prompts/project_requirements.txt : General requirements for generating the project files"
}
